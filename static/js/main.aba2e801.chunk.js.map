{"version":3,"sources":["helpers/match.js","SquareWaveIcon/index.js","TriangleWaveIcon/index.js","SawtoothWaveIcon/index.js","SineWaveIcon/index.js","OptionsToggle/index.js","PresetsVirtual/index.js","ShuttleControls/index.js","index.js"],"names":["removeDiacritics","require","clean","specialCharsRegex","wordCharacterRegex","whitespacesRegex","module","exports","text","query","options","subject","baseObject","insideWords","findAllOccurrences","requireMatchAll","Object","keys","forEach","key","trim","split","filter","word","length","reduce","result","occurrence","index","wordLen","prefix","test","regex","RegExp","replace","exec","push","slice","Array","join","sort","match1","match2","SquareWaveIcon","props","SvgIcon","version","id","x","y","viewBox","enableBackground","fill","strokeMiterlimit","strokeWidth","stroke","points","TriangleWaveIcon","SawtoothWaveIcon","SineWaveIcon","d","useStyles","makeStyles","theme","paper","display","border","palette","divider","flexWrap","alignSelf","height","margin","spacing","StyledToggleButtonGroup","withStyles","grouped","padding","borderRadius","shape","ToggleButtonGroup","OptionsToggle","optionsChangeCallback","React","useState","waveform","setWaveform","loop","setShouldLoop","classes","Paper","elevation","className","size","value","exclusive","onChange","_","newWaveform","aria-label","ToggleButton","Divider","orientation","arial-label","selected","onClick","renderRow","data","style","cloneElement","overflow","textOverflow","whiteSpace","ListboxComponent","forwardRef","ref","children","other","useTheme","smUp","useMediaQuery","breakpoints","up","itemCount","isArray","itemSize","outerElementType","useMemo","props2","ref2","Math","min","maxHeight","itemData","width","innerElementType","overscanCount","listbox","PresetsVirtual","presetsChangeCallback","open","setOpen","setOptions","loading","useEffect","active","a","presets","localStorage","getItem","fetch","process","response","json","setItem","JSON","stringify","parse","programs","map","preset","name","comments","frequencies","Autocomplete","multiple","onOpen","onClose","values","getOptionLabel","option","filterSelectedOptions","filterOptions","state","label","inputValue","toLowerCase","includes","disableOpenOnFocus","disableListWrap","freeSolo","autoHighlight","renderInput","params","TextField","fullWidth","variant","InputProps","endAdornment","Fragment","CircularProgress","color","renderOption","matchOptions","nameMatches","match","nameParts","commentMatches","commentParts","undefined","frequencyMatches","frequencyParts","Grid","container","alignItems","item","xs","part","fontWeight","highlight","Typography","fab","position","bottom","right","ShuttleControls","playing","setPlaying","handlePlaying","Tone","start","transport","Transport","stop","cancel","timeSignature","bpm","timeOffset","presetIndex","frequencyIndex","frequency","OmniOscillator","toMaster","sync","setLoopPoints","Fab","createMuiTheme","primary","indigo","secondary","blue","Player","root","setState","sm","this","Component","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.aba2e801.chunk.js","sourcesContent":["//This file comes from https://github.com/moroshko/autosuggest-highlight/pull/12\r\n\r\nvar removeDiacritics = require('diacritic').clean;\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters\r\nvar specialCharsRegex = /[.*+?^${}()|[\\]\\\\]/g;\r\n\r\n// http://www.ecma-international.org/ecma-262/5.1/#sec-15.10.2.6\r\nvar wordCharacterRegex = /[a-z0-9_]/i;\r\n\r\nvar whitespacesRegex = /\\s+/;\r\n\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(specialCharsRegex, '\\\\$&');\r\n}\r\n\r\nfunction extend(subject, baseObject) {\r\n  subject = subject || {};\r\n  Object.keys(subject).forEach(function(key) {\r\n    baseObject[key] = !!subject[key];\r\n  });\r\n  return baseObject;\r\n}\r\n\r\nmodule.exports = function match(text, query, options) {\r\n  options = extend(options, {\r\n    insideWords: false,\r\n    findAllOccurrences: false,\r\n    requireMatchAll: false\r\n  });\r\n\r\n  text = removeDiacritics(text);\r\n  query = removeDiacritics(query);\r\n\r\n  return (\r\n    query\r\n      .trim()\r\n      .split(whitespacesRegex)\r\n      // If query is blank, we'll get empty string here, so let's filter it out.\r\n      .filter(function(word) {\r\n        return word.length > 0;\r\n      })\r\n      .reduce(function(result, word) {\r\n        var wordLen = word.length;\r\n        var prefix = !options.insideWords && wordCharacterRegex.test(word[0]) ? '\\\\b' : '';\r\n        var regex = new RegExp(prefix + escapeRegexCharacters(word), 'i');\r\n        var occurrence, index;\r\n\r\n        occurrence = regex.exec(text);\r\n        if (options.requireMatchAll && occurrence === null) {\r\n          text = '';\r\n          return [];\r\n        }\r\n\r\n        while (occurrence) {\r\n          index = occurrence.index;\r\n          result.push([index, index + wordLen]);\r\n\r\n          // Replace what we just found with spaces so we don't find it again.\r\n          text =\r\n            text.slice(0, index) +\r\n            new Array(wordLen + 1).join(' ') +\r\n            text.slice(index + wordLen);\r\n\r\n          if (!options.findAllOccurrences) {\r\n            break;\r\n          }\r\n\r\n          occurrence = regex.exec(text);\r\n        }\r\n\r\n        return result;\r\n      }, [])\r\n      .sort(function(match1, match2) {\r\n        return match1[0] - match2[0];\r\n      })\r\n  );\r\n};\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nexport default function SquareWaveIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" enableBackground=\"new 0 0 32 32\">\r\n                <polyline fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.5\" stroke=\"currentColor\" points=\"1.5,15.5 1.5,1.5 16.5,1.5 16.5,30.5 30.5,30.5 30.5,15.5 \"/>\r\n            </svg>\r\n        </SvgIcon>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nexport default function TriangleWaveIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" enableBackground=\"new 0 0 32 32\">\r\n            <   polyline fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.5\" stroke=\"currentColor\" points=\"1.5,15.5 9.5,1.5 22.5,30.5 30.5,15.5\"/>\r\n            </svg>\r\n        </SvgIcon>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nexport default function SawtoothWaveIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" enableBackground=\"new 0 0 32 32\">\r\n                <polyline fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.5\" stroke=\"currentColor\" points=\"1.5,15.5 1.5,1.5 30.5,30.5 30.5,15.5 \"/>\r\n            </svg>\r\n        </SvgIcon>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nexport default function SineWaveIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" enableBackground=\"new 0 0 32 32\">\r\n                <path fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.5\" stroke=\"currentColor\" d=\"M30.5,15.5c0,17-14,17.8-14,0c0-17.2-15-16-15,0 \"/>\r\n            </svg>\r\n        </SvgIcon>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport SquareWaveIcon from '../SquareWaveIcon';\r\nimport TriangleWaveIcon from '../TriangleWaveIcon';\r\nimport SawtoothWaveIcon from '../SawtoothWaveIcon';\r\nimport SineWaveIcon from '../SineWaveIcon';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    display: 'flex',\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    flexWrap: 'wrap',\r\n  },\r\n  divider: {\r\n    alignSelf: 'stretch',\r\n    height: 'auto',\r\n    margin: theme.spacing(1, 0.5),\r\n  },\r\n}));\r\n\r\nconst StyledToggleButtonGroup = withStyles(theme => ({\r\n  grouped: {\r\n    margin: theme.spacing(0.5),\r\n    border: 'none',\r\n    padding: theme.spacing(0, 1),\r\n    '&:not(:first-child)': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    '&:first-child': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function OptionsToggle({optionsChangeCallback}) {\r\n  const [waveform, setWaveform] = React.useState('sine');\r\n  const [loop, setShouldLoop] = React.useState(true);\r\n\r\n  const handleWaveform = (_, newWaveform) => {\r\n    setWaveform(newWaveform);\r\n    optionsChangeCallback({waveform: newWaveform, loop: loop});\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <StyledToggleButtonGroup\r\n          size=\"small\"\r\n          value={waveform}\r\n          exclusive\r\n          onChange={handleWaveform}\r\n          aria-label=\"waveform\"\r\n        >\r\n          <ToggleButton value=\"square\" aria-label=\"square waves\">\r\n            <SquareWaveIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"triangle\" aria-label=\"triangle waves\">\r\n            <TriangleWaveIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"sawtooth\" aria-label=\"sawtooth waves\">\r\n            <SawtoothWaveIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"sine\" aria-label=\"sine waves\">\r\n            <SineWaveIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n        <Divider orientation=\"vertical\" className={classes.divider} />\r\n        <StyledToggleButtonGroup\r\n          size=\"small\"\r\n          arial-label=\"text formatting\"\r\n        >\r\n          <ToggleButton value=\"loop\"\r\n            selected={loop}\r\n            onClick={() => {\r\n              setShouldLoop(!loop);\r\n              optionsChangeCallback({waveform: waveform, loop: !loop});\r\n            }}\r\n            aria-label=\"loop audio\">\r\n            <LoopIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport parse from 'autosuggest-highlight/parse';\n// import match from 'autosuggest-highlight/match';\nimport match from '../helpers/match';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { FixedSizeList } from 'react-window';\n\nfunction renderRow(props) {\n    const { data, index, style } = props;\n\n    return React.cloneElement(data[index], {\n        style: {\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            display: 'block',\n            ...style,\n        },\n    });\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const { children, ...other } = props;\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'));\n    const itemCount = Array.isArray(children) ? children.length : 0;\n    //Easier to just fix the size...\n    const itemSize = (smUp ? 36 : 48) * 2.2;\n\n    const outerElementType = React.useMemo(() => {\n        return React.forwardRef((props2, ref2) => <div ref={ref2} {...props2} {...other} />);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div ref={ref}>\n            <FixedSizeList\n                style={{ padding: 0, height: Math.min(3, itemCount) * itemSize, maxHeight: 'auto' }}\n                itemData={children}\n                height={250}\n                width=\"100%\"\n                outerElementType={outerElementType}\n                innerElementType=\"ul\"\n                itemSize={itemSize}\n                overscanCount={5}\n                itemCount={itemCount}\n            >\n                {renderRow}\n            </FixedSizeList>\n        </div>\n    );\n});\n\nListboxComponent.propTypes = {\n    children: PropTypes.node,\n};\n\nconst useStyles = makeStyles({\n    listbox: {\n        '& ul': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\nexport default function PresetsVirtual({presetsChangeCallback}) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n\n    React.useEffect(() => {\n        let active = true;\n\n        if (!loading) {\n            // active = false;\n            return undefined;\n        }\n\n        (async () => {\n            let presets = localStorage.getItem('presets');\n            if (!presets) {\n                const response = await fetch(`${process.env.PUBLIC_URL}/cafl.json`);\n                presets = await response.json();\n                localStorage.setItem('presets', JSON.stringify(presets));\n            } else {\n                presets = JSON.parse(presets);\n            }\n\n            if (active) {\n                setOptions(\n                    Object.keys(presets.programs).map(\n                        key => {\n                            let preset = presets.programs[key];\n                            let name = key;\n                            if (!preset.comments) {\n                                preset.comments = \"None\";\n                            }\n                            if (!preset.frequencies) {\n                                preset.frequencies = [];\n                            }\n                            return { name: name, ...presets.programs[key] }\n                        }\n                    )\n                );\n            }\n        })();\n\n        return () => {\n            active = false;\n        };\n    }, [loading]);\n\n    // React.useEffect(() => {\n    //   if (!open) {\n    //     setOptions([]);\n    //   }\n    // }, [open]);\n\n    return (\n        <Autocomplete\n            id=\"presets\"\n            /* style={{ width: 600 }} */\n            multiple\n            open={open}\n            onOpen={() => {\n                setOpen(true);\n            }}\n            onClose={() => {\n                setOpen(false);\n            }}\n            onChange={(_, values) => {\n                presetsChangeCallback(values);\n            }}\n            getOptionLabel={option => option.name}\n            filterSelectedOptions\n            filterOptions={\n                (options, state) => {\n                    if (options.length > 0) {\n                        const label = state.inputValue.toLowerCase();\n                        const filteredOptions = options.filter(option => {\n                            if (option.name.toLowerCase().includes(label) ||\n                                (option.comments && option.comments.toLowerCase().includes(label))) {\n                                return true;\n                            }\n                            return false;\n                        });\n                        return filteredOptions;\n                    }\n                    return [];\n                }\n            }\n            //disableCloseOnSelect\n            disableOpenOnFocus\n            disableListWrap\n            classes={classes}\n            ListboxComponent={ListboxComponent}\n            freeSolo\n            autoHighlight\n            options={options}\n            loading={loading}\n            renderInput={params => (\n                <TextField\n                    {...params}\n                    label=\"Presets\"\n                    fullWidth\n                    variant=\"outlined\"\n                    InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                    }}\n                />\n            )}\n            renderOption={(option, { inputValue }) => {\n                const matchOptions = {\n                    insideWords: true,\n                    findAllOccurrences: true,\n                };\n                const nameMatches = match(option.name, inputValue, matchOptions);\n                const nameParts = parse(option.name, nameMatches);\n                const commentMatches = match(option.comments, inputValue, matchOptions);\n                const commentParts = parse(option.comments, commentMatches);\n                const frequencies = (option.frequencies) ? option.frequencies.join(\", \") : undefined;\n                const frequencyMatches = match(frequencies, inputValue, matchOptions);\n                const frequencyParts = parse(frequencies, frequencyMatches);\n\n                return (\n                    <Grid container alignItems=\"center\">\n                        <Grid item xs>\n                            {nameParts.map((part, index) => (\n                                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                    {part.text}\n                                </span>\n                            ))}\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.comments && \"Comments: \"}\n                                {option.comments && commentParts.map((part, index) => (\n                                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                        {part.text}\n                                    </span>\n                                ))\n                                }\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {option.frequencies && \"Frequencies: \"}\n                                {option.frequencies && frequencyParts.map((part, index) => (\n                                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                        {part.text}\n                                    </span>\n                                ))\n                                }\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        />\n    );\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport Tone from \"tone\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function ShuttleControls({presets, options}) {\r\n    const classes = useStyles();\r\n    // const theme = useTheme();\r\n    const [playing, setPlaying] = React.useState(false);\r\n\r\n    async function handlePlaying() {\r\n        await Tone.start();\r\n        const transport = Tone.Transport;\r\n\r\n        if (playing) {\r\n            transport.stop();\r\n            //Clear out the timeline\r\n            transport.cancel();\r\n        } else {\r\n            //These may be indifferent\r\n            transport.timeSignature = [4, 4];\r\n            transport.bpm.value = 60;\r\n\r\n            const secondsPerFrequency = 3 * 60;\r\n            let timeOffset = 0;\r\n\r\n            for (let presetIndex = 0; presetIndex < presets.length; presetIndex++) {\r\n                let preset = presets[presetIndex];\r\n                if (preset.frequencies) {\r\n                    for (let frequencyIndex = 0; frequencyIndex < preset.frequencies.length; frequencyIndex++) {\r\n                        let frequency = preset.frequencies[frequencyIndex];\r\n                        new Tone.OmniOscillator(frequency, options.waveform)\r\n                            .toMaster()\r\n                            .sync()\r\n                            .start(timeOffset)\r\n                            .stop(timeOffset + secondsPerFrequency);\r\n                        timeOffset += secondsPerFrequency;\r\n                    }\r\n                }\r\n            }\r\n\r\n            transport.setLoopPoints(0, timeOffset);\r\n            transport.loop = options.loop;\r\n\r\n            transport.start(0, 0);\r\n        }\r\n        setPlaying(!playing && presets.length > 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!playing ?\r\n                <Fab aria-label=\"Play\" className={classes.fab} color=\"primary\" onClick={handlePlaying}>\r\n                    <PlayIcon />\r\n                </Fab>\r\n                :\r\n                <Fab aria-label=\"Pause\" className={classes.fab} color=\"secondary\" onClick={handlePlaying}>\r\n                    <PauseIcon />\r\n                </Fab>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport OptionsToggle from './OptionsToggle';\r\n// import Presets from './Presets';\r\nimport PresetsVirtual from './PresetsVirtual';\r\n// import PresetsVirtual2 from './PresetsVirtual2';\r\n// import PresetsVirtualList from './PresetsVirtualList';\r\nimport ShuttleControls from \"./ShuttleControls\";\r\n// import \"./index.css\";\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: blue,\r\n  },\r\n});\r\n\r\nclass Player extends React.Component {\r\n  // const [frequencies, setFrequencies] = React.useState(true);\r\n  // const [options, setOptions] = React.useState([]);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      presets: [],\r\n      options: {waveform: 'sine', loop: true}\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const presetsChangeCallback = (presets) => {\r\n      this.setState({ presets: (presets) ? presets : [] });\r\n    }\r\n\r\n    const optionsChangeCallback = (options) => {\r\n      this.setState({ options: options });\r\n    }\r\n\r\n    return (\r\n      <div className={theme.root}>\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12}>\r\n            <Presets />\r\n          </Grid> */}\r\n          <Grid item xs={12}>\r\n            <PresetsVirtual presetsChangeCallback={presetsChangeCallback} />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={6}>\r\n            <PresetsVirtual2 />\r\n          </Grid> */}\r\n          {/* <Grid item xs={12} sm={6}>\r\n            <PresetsVirtualList />\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={6}>\r\n            <OptionsToggle optionsChangeCallback={optionsChangeCallback} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ShuttleControls presets={this.state.presets} options={this.state.options} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n\r\n      /* <div>\r\n        <div>\r\n          <Presets />\r\n        </div>\r\n        <div>\r\n          <PresetsVirtual />\r\n        </div>\r\n        <div>\r\n          <OptionsToggle />\r\n        </div>\r\n        <div>\r\n          <ShuttleControls />\r\n        </div>\r\n      </div> */\r\n    );\r\n  }\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<ThemeProvider theme={theme}><Player /></ThemeProvider>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}